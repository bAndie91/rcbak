#!/bin/bash

set -e
set -o pipefail
trap exception ERR INT

declare -a obj
declare -a excludes
pwd=''


errx()
{
	local code=1
	if [ "$1" -gt 0 ] 2>/dev/null
	then
		code=$1
		shift
	fi
	warnx "$@"
	exit $code
}
warnx()
{
	echo "$@" >&2
}
encrypt_write()
{
  gpg -se -r "$rcpt" -o "$1" --no-tty --passphrase-fd 3 --yes 3<<<"$passphrase"
}
save_to()
{
  local outfile=$1
  local tmpfile=$outfile.part
  
  if [ -n "$rcpt" ]
  then
	# encrypting
	encrypt_write "$tmpfile"
  else
	cat >"$tmpfile"
  fi
  mv -f "$tmpfile" "$outfile"
}
exception()
{
	if [ -n "$pwd" ]
	then
		cd "$pwd"
	fi
	if [ "$meta_file_saved" = 1 ]
	then
		if [ -e increment.snar ]
		then
			mv -v increment.snar increment.snar.fail
		fi
		if [ -e increment.snar.old ]
		then
			mv -v increment.snar.old increment.snar
		fi
	fi
	rm .rcbak.lk
}


if [ $# -gt 0 ]
then
	errx "Usage: rcbak"
fi


dat_file=''
nts_file=''
meta_file_saved=''


# base directory (file may contain $variables)
if [ -e .rcbak.ba ]
then
	base_dir=$(head -n 1 .rcbak.ba)
	if [ "${base_dir:0:2}" = '~/' ]
	then
		base_dir=$HOME/${base_dir:2}
	fi
else
	errx "Missing file: .rcbak.ba"
fi

# load names of included and excluded files
IFS_=$IFS
IFS=$'\n'

obj=(.)
if [ -e .rcbak.ls ]
then
	exec {fd}<.rcbak.ls
	mapfile -u $fd obj
	unset fd
fi

excludes=()
if [ -e .rcbak.ex ]
then
	declare -a excludes0=()
	exec {fd}<.rcbak.ex
	mapfile -u $fd excludes0
	unset fd
	
	for exclude in "${excludes0[@]}"
	do
		excludes+=("--exclude=$exclude")
	done
	unset excludes0
fi

archiver=gzip
if [ -e .rcbak.ar ]
then
	a=`cat .rcbak.ar`
	case "$a" in
	Z|compress)
		archiver=compress;;
	gz|gzip)
		archiver=gzip;;
	bzip|bzip2|bz2)
		archiver=bzip2;;
	xz)
		archiver=xz;;
	*)
		errx "Unsupported archiver: $a"
		;;
	esac
fi

case "$archiver" in
	compress)
		ext=tar.Z
		compflag=Z
		;;
	gzip)
		ext=tar.gz
		compflag=z
		;;
	bzip2)
		ext=tar.bz2
		compflag=j
		;;
	xz)
		ext=tar.xz
		compflag=J
		;;
esac


if [ -e .rcbak.su ]
then
	sudo="sudo -u $(head -n 1 .rcbak.su)"
else
	sudo=''
fi

if [ -e .rcbak.to ]
then
	rcpt=`head -n 1 .rcbak.to`
	read -e -s -p "Enter GPG passphrase for default key: " passphrase
	# test passphrase
	echo TEST | encrypt_write /dev/null
else
	rcpt=''
fi

IFS=$IFS_


exec 3>>.rcbak.lk
if ! flock -x -n 3
then
	errx "Locked."
fi


timestamp=`date +%Y-%m-%d_%H%M`
if [ -e increment.snar ]
then
	dat_file=$timestamp.$ext
else
	dat_file=${timestamp}_init.$ext
fi
nts_file=`readlink -f -n "$timestamp.nts"`
if [ -n "$rcpt" ]
then
	dat_file="$dat_file.gpg"
	nts_file="$nts_file.gpg"
fi


# pre-run script
if [ -e .rcbak.pr ]
then
	source ./.rcbak.pr pre
fi


pwd=`pwd`
# save file list
warnx "Generate null-terminated-string list: $nts_file ..."
cd "$base_dir"
$sudo find "${obj[@]}" -print0 | save_to "$nts_file"
cd "$pwd"


# do the backup
warnx "Generate archive: $dat_file ..."

if [ -e increment.snar ]
then
	cp -vfa increment.snar increment.snar.old
fi
meta_file_saved=1

$sudo tar c${compflag}f - --force-local -C "$base_dir" "${obj[@]}" -g increment.snar.part "${excludes[@]}" --exclude-tag=.noBackup --exclude-tag=.rcbak.no | save_to "$dat_file"
mv -f increment.snar.part increment.snar


# post-run script
if [ -e .rcbak.pr ]
then
	source ./.rcbak.pr post
fi

rm .rcbak.lk || true
