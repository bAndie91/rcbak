#!/bin/bash

set -e
set -o pipefail
trap Exception ERR INT

declare -a Objects
declare -a Excludes
Cwd=''
Recipient=''


errx()
{
	local code=1
	if [ "$1" -gt 0 ] 2>/dev/null
	then
		code=$1
		shift
	fi
	warnx "$@"
	exit $code
}
warnx()
{
	echo "$@" >&2
}
EncryptWrite()
{
  gpg -se -r "$Recipient" -o "$1" --no-tty --passphrase-fd 3 --yes 3<<<"$Passphrase"
}
SaveTo()
{
  local outfile=$1
  local tmpfile=$outfile.part
  
  if [ -n "$Recipient" ]
  then
	# encrypting
	encrypt_write "$tmpfile"
  else
	cat >"$tmpfile"
  fi
  mv -f "$tmpfile" "$outfile"
}
Exception()
{
	if [ -n "$Cwd" ]
	then
		cd "$Cwd"
	fi
	if [ "$MetaFileSaved" = yes ]
	then
		if [ -e increment.snar ]
		then
			mv -v increment.snar increment.snar.fail
		fi
		if [ -e increment.snar.old ]
		then
			mv -v increment.snar.old increment.snar
		fi
	fi
	rm .rcbak.lk
}


if [ $# -gt 0 ]
then
	errx "Usage: rcbak"
fi


Archive=''
NTSFile=''
MetaFileSaved=''


# base directory (file may contain $variables)
if [ -e .rcbak.ba ]
then
	Basedir=$(head -n 1 .rcbak.ba)
	if [ "${Basedir:0:2}" = '~/' ]
	then
		Basedir=$HOME/${Basedir:2}
	fi
else
	errx "Missing file: .rcbak.ba"
fi

# load names of included and excluded files
IFS_=$IFS
IFS=$'\n'

Objects=(.)
if [ -e .rcbak.ls ]
then
	exec {fd}<.rcbak.ls
	mapfile -u $fd Objects
	unset fd
fi

Excludes=()
if [ -e .rcbak.ex ]
then
	declare -a excludes0=()
	exec {fd}<.rcbak.ex
	mapfile -u $fd excludes0
	unset fd
	
	for exclude in "${excludes0[@]}"
	do
		Excludes+=("--exclude=$exclude")
	done
	unset excludes0 exclude
fi

Archiver=gzip
if [ -e .rcbak.ar ]
then
	a=`cat .rcbak.ar`
	case "$a" in
	Z|compress)
		Archiver=compress;;
	gz|gzip)
		Archiver=gzip;;
	bzip|bzip2|bz2)
		Archiver=bzip2;;
	xz)
		Archiver=xz;;
	*)
		errx "Unsupported archiver: $a"
		;;
	esac
	unset a
fi

case "$Archiver" in
	compress)
		Extension=tar.Z
		CompressFlag=Z
		;;
	gzip)
		Extension=tar.gz
		CompressFlag=z
		;;
	bzip2)
		Extension=tar.bz2
		CompressFlag=j
		;;
	xz)
		Extension=tar.xz
		CompressFlag=J
		;;
esac


if [ -e .rcbak.su ]
then
	Wrapper="sudo -u $(head -n 1 .rcbak.su)"
else
	Wrapper=''
fi

if [ -e .rcbak.to ]
then
	Recipient=`head -n 1 .rcbak.to`
	read -e -s -p "Enter GPG passphrase for default key: " Passphrase
	# test passphrase
	echo TEST | EncryptWrite /dev/null
fi

IFS=$IFS_


exec 3>>.rcbak.lk
if ! flock -x -n 3
then
	errx "Locked."
fi


Timestamp=`date +%Y-%m-%d_%H%M`
if [ -e increment.snar ]
then
	Archive=$Timestamp.$Extension
else
	Archive=${Timestamp}_init.$Extension
fi
NTSFile=`readlink -f -n "$Timestamp.nts"`
if [ -n "$Recipient" ]
then
	Archive="$Archive.gpg"
	NTSFile="$NTSFile.gpg"
fi


# pre-run script
if [ -e .rcbak.pr ]
then
	source ./.rcbak.pr pre
fi


Cwd=`pwd`
# save file list
warnx "Generate null-terminated-string list: $NTSFile ..."
cd "$Basedir"
$Wrapper find "${Objects[@]}" -print0 | SaveTo "$NTSFile"
cd "$Cwd"


# do the backup
warnx "Generate archive: $Archive ..."

if [ -e increment.snar ]
then
	cp -vfa increment.snar increment.snar.old
fi
MetaFileSaved=yes

$Wrapper tar c${CompressFlag}f - --force-local -C "$Basedir" "${Objects[@]}" -g increment.snar.part "${Excludes[@]}" --exclude-tag=.noBackup --exclude-tag=.rcbak.no | SaveTo "$Archive"
mv -f increment.snar.part increment.snar


# post-run script
if [ -e .rcbak.pr ]
then
	source ./.rcbak.pr post
fi

rm .rcbak.lk || true
